using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Timers;
using System.Diagnostics;


namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        [DllImport("user32.dll")]
        public static extern bool RegisterHotKey(IntPtr hWnd, int id, int fsModifiers, int vlc);

        private static System.Timers.Timer aTimer;
        private bool isWaitingForSecondKey = false;

        public Form1()
        {
            InitializeComponent();
            
            int FirstHotkeyId = 1;
            int FirstHotKeyKey = (int)Keys.P;
            Boolean CtrlPRegistered = RegisterHotKey(
            this.Handle, FirstHotkeyId, 0x0002, FirstHotKeyKey // 0x0002 is the modifier for Ctrl
            );

            int SecondHotkeyId = 2;
            int SecondHotKeyKey = (int)Keys.W;
            Boolean CtrlWRegistered = RegisterHotKey(
            this.Handle, SecondHotkeyId, 0x0002, SecondHotKeyKey // 0x0002 is the modifier for Ctrl
            );

            if (!CtrlPRegistered)
            {
                Console.WriteLine("Global Hotkey F9 couldn't be registered !");
            }

            if (!CtrlWRegistered)
            {
                Console.WriteLine("Global Hotkey F10 couldn't be registered !");
            }
        }


        protected override void WndProc(ref Message m)
        {
            if (m.Msg == 0x0312)
            {
                int id = m.WParam.ToInt32();
                switch (id)
                {
                    case 1:
                        // Ctrl + P pressed
                        isWaitingForSecondKey = true;
                        SetTimer();
                        break;
                    case 2:
                        // Ctrl + W pressed
                        if (isWaitingForSecondKey)
                        {
                            //MessageBox.Show("Ctrl + P followed by Ctrl + W pressed! Do something here...");
                            Process.Start(@"F:\LibreAutomate_exe\Helper_002.exe", "4");
                            isWaitingForSecondKey = false;
                            aTimer.Stop();
                        }
                        break;
                }
            }

            base.WndProc(ref m);
        }
        private void SetTimer()
        {
            // Create a timer with a one second interval.
            aTimer = new System.Timers.Timer(1000);
            // Hook up the Elapsed event for the timer.
            aTimer.Elapsed += OnTimedEvent;
            aTimer.AutoReset = false;
            aTimer.Enabled = true;
        }

        private void OnTimedEvent(Object source, ElapsedEventArgs e)
        {
            isWaitingForSecondKey = false;
        }
    }
}

